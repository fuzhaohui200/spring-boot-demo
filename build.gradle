group 'com.ymlinks'
version '1.0.0'

buildscript {
    ext {
        springBootAdminVersion = '2.2.3'
        springCloudVersion = 'Hoxton.SR7'
        springBootVersion = '2.3.2.RELEASE'
        springGradleVersion = '1.0.9.RELEASE'
        mybatisVersion = '2.1.3'
        druidVersion = '1.1.23'
        grpcVersion = '1.30.2'
        grpc2JavaVersion = '3.12.4'
        hadoopVersion = '2.5.0.RELEASE'
        lombokVersion = '1.18.6'
    }
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        maven {
            url 'https://repo.spring.io/libs-release'
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:$springGradleVersion"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.8"
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2'
        classpath 'com.gradle:build-scan-plugin:2.2.1'
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'org.sonarqube'

    apply plugin: 'io.spring.dependency-management'
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
        }
    }

    sourceCompatibility = 1.8
    repositories {
        maven {
            url "https://maven.aliyun.com/repository/public"
        }
        jcenter()
        mavenCentral()
        maven {
            url 'https://repo.spring.io/libs-milestone'
        }
        maven {
            url 'https://repo.spring.io/libs-snapshot'
        }
    }

    dependencies {
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        compileOnly "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor 'org.springframework.boot:spring-boot-autoconfigure-processor'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        testCompile "org.springframework.boot:spring-boot-starter-test"
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile "org.mockito:mockito-core:1.9.5"
    }

    sonarqube {
        properties {
            property "sonar.sourceEncoding", "UTF-8"
            property "sonar.sources", "src/main"
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
