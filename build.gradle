group 'com.ymlinks'
version '1.0.0'


buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
        springCloudVersion = '2.0.0.RELEASE'
        mybatisVersion = '1.2.0'
        grpcVersion = '1.12.0'
    }
    repositories {
        maven {
            url "http://maven.aliyun.com/nexus/content/repositories/public/"
        }
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.5"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    repositories {
        maven {
            url "http://maven.aliyun.com/nexus/content/repositories/public/"
        }
        jcenter()
        mavenCentral()
        maven {
            url 'https://repo.spring.io/libs-milestone'
        }
        maven {
            url 'https://repo.spring.io/libs-snapshot'
        }
    }

    dependencies {


        compileOnly "org.projectlombok:lombok:1.18.0"

        testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile "org.mockito:mockito-core:1.9.5"
    }

    apply plugin: 'com.google.protobuf'

    protobuf {
        protoc {
            artifact = 'com.google.protobuf:protoc:3.5.1-1'
        }
        plugins {
            grpc {
                artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
            }
        }
        generateProtoTasks {
            all()*.plugins {
                grpc {
                    option 'enable_deprecated=false'
                }
            }
        }
    }

// Inform IntelliJ projects about the generated code.
    apply plugin: 'idea'

    idea {
        module {
            sourceDirs += file("${projectDir}/build/generated/source/proto/main/java")
            sourceDirs += file("${projectDir}/build/generated/source/proto/main/grpc")
        }
    }

    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
                srcDir 'src/main/proto'
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task wrapper(type: Wrapper) {
    gradleVersion = "4.8"
}
