app.name=cloud
app.description=${app.name} is a Spring Boot application
server.servlet.path=/cloud
server.port=8801
spring.cache.ehcache.config=classpath:config/ehcache.xml
#server.port=8443
#server.ssl.enabled=true
#server.ssl.key-store=classpath:main.jks
#server.ssl.key-password=secret
#management.port=8080
#management.ssl.enable=true
#management.ssl.key-store=classpath:management.jks
#management.ssl.key-password=secret
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain
server.compression.min-response-size=1
spring.profiles.active=dev
debug=false
spring.application.name=${app.name}
#\u670D\u52A1\u6CE8\u518C
spring.cloud.consul.host=127.0.0.1
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.enabled=true
#spring.cloud.consul.discovery.instance-id=${spring.application.name}
spring.cloud.consul.discovery.hostname=localhost
spring.cloud.consul.discovery.port=${server.port}
spring.cloud.consul.discovery.serviceName=${spring.application.name}
spring.cloud.consul.discovery.healthCheckUrl=http://${spring.cloud.consul.discovery.hostname}:${server.port}/${server.servlet.path}/actuator/health
spring.cloud.consul.discovery.healthCheckInterval=10s
spring.cloud.consul.discovery.tags=${spring.profiles.active}
#\u670D\u52A1\u8C03\u7528\u94FE\u8DEF\u76D1\u63A7
spring.zipkin.enabled=true
spring.zipkin.base-url=http://127.0.0.1:17601/
spring.sleuth.enabled=true
spring.sleuth.async.enabled=true
#  \u9ED8\u8BA4\u503C\u4E3A0.1f\uFF0C\u73B0\u5728\u4E3A\u4E86\u6D4B\u8BD5\u8BBE\u7F6E100%\u91C7\u96C6
spring.sleuth.sampler.probability=1
#spring.sleuth.web.skip-pattern=^cleanup.*|.+favicon.*
# ElasticSearch \u914D\u7F6E
spring.data.elasticsearch.cluster-nodes=192.168.141.160:9300
spring.data.elasticsearch.repositories.enabled=true
log.path=logs
logstash.destination=102.168.141.160:5000
oss.access.key.id=LTAIk2iRwl37qqMw
oss.access.key.secret=3L9BshzdttyqkUYsX7GHlxpnV2wUdi
oss.access.role.arn=acs:ram::1468928356886806:role/ramtestappwrite
oss.policy={"Version":"1","Statement":[{"Effect":"Allow","Action":["oss:Put*"],"Resource":["acs:oss:*:*:carlover"]}]}

# Mybatis \u914D\u7F6E
logging.level.org.mybatis=INFO
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://106.14.238.126:3306/yimei?useUnicode=true&autoReconnect=true&useSSL=false&rewriteBatchedStatements=TRUE&characterEncoding=UTF-8&allowMultiQueries=true&zeroDateTimeBehavior=round
spring.datasource.username=root
spring.datasource.password=beadwallet.mysql@2016
spring.jpa.database=MYSQL
spring.jpa.show-sql=true
mybatis.mapper-locations=classpath:mybatis/*Mapper.xml
mybatis.type-aliases-package=com.we.ym.user.model
logging.level.sample.mybatis.mapper=TRACE
mybatis.configuration.cache-enabled=true
mybatis.configuration.lazy-loading-enabled=true
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
mybatis.configuration.default-statement-timeout=30
# \u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E\uFF0C\u5E94\u7528\u5230\u4E0A\u9762\u6240\u6709\u6570\u636E\u6E90\u4E2D# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=select 1
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.filters=stat,wall,log4j
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
#spring.datasource.useGlobalDataSourceStat=true